---
# tasks file for roles/neutron_self_service_network_controller
- name: install neutron packages
  ansible.builtin.dnf:
    name: "{{ neutron_packages }}"
    state: latest

- name: some ip_get method and pre configure 
  block:    
    - name: get controller node's first network interface IP
      ansible.builtin.shell: |
        ip -4 -br addr show | grep -v "lo" | awk '{print $3}' | cut -d'/' -f1 | head -n1
      register: management_ip

    - name: get the list of available interface
      ansible.builtin.shell: "ip -o link show | awk -F': ' '{print $2}'"
      register: interface_list

    - name: set facts for interfaces names
      ansible.builtin.set_fact:
        management_if: "{{ interface_list.stdout_lines[1] }}"
        provider_if: "{{ interface_list.stdout_lines[2] }}"
        overlay_if: "{{ interface_list.stdout_lines[3] }}"

    - name: get overlay_if's ip
      ansible.builtin.shell: "ip -4 addr show dev {{ overlay_if }} | grep inet | awk '{print $2}' | cut -d'/' -f1"
      register: overlay_ip

    - name: set fact of local_ip var
      ansible.builtin.set_fact:
        local_ip: "{{ overlay_ip.stdout }}"


- name: enable br_netfilter loads on boot
  ansible.builtin.copy:
    dest: /etc/modules-load.d/br_netfilter.conf
    content: "br_netfilter\n"
    mode: '0644'

- name: configure sysctl for bridge-nf
  ansible.builtin.copy:
    dest: /etc/sysctl.d/99-bridge-nf.conf
    content: | 
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
    mode: '0644'

- name: reload sysctl
  ansible.builtin.command: sysctl --system

- name: create neutron db and db_user 
  block: 
    - name: create neutron db
      community.mysql.mysql_db:
        name: "{{ neutron_db.neutron_db_name }}"
        state: present
        login_host: "{{ management_ip.stdout }}"
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: grant all pri to neutron db user@localhost
      community.mysql.mysql_user:
        name: "{{ neutron_db.neutron_db_user }}"
        password: "{{ neutron_db.neutron_db_user_password }}"
        login_host: "{{ management_ip.stdout }}"
        priv: "{{ neutron_db.neutron_db_name }}.*:ALL"
        host: localhost
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: grant all pri to neutron db user@%
      community.mysql.mysql_user:
        name: "{{ neutron_db.neutron_db_user }}"
        password: "{{ neutron_db.neutron_db_user_password }}"
        login_host: "{{ management_ip.stdout }}"
        priv: "{{ neutron_db.neutron_db_name }}.*:ALL"
        host: "%"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

- name: create neutron openstack service and assign admin role to neutron user
  block: 
    - name: create neutron openstack user
      openstack.cloud.identity_user:
        name: neutron
        domain: default
        password: "{{ neutron_conf.neutron_openstack_service_password }}"

    - name: assign admin role to neutron user in service project
      openstack.cloud.role_assignment:
        user: neutron
        project: service
        role: admin
        state: present

    - name: create image service(neutron)
      openstack.cloud.catalog_service:
        name: neutron
        service_type: network
        description: "OpenStack Network Service"
        state: present

- name: create neutron's api endpoint
  block: 
    - name: create neutron's public endpoint
      openstack.cloud.endpoint:
        service: neutron
        endpoint_interface: public
        url: "http://{{ management_ip.stdout }}:9696"
        region: RegionOne
        state: present

    - name: create neutron's internal endpoint
      openstack.cloud.endpoint:
        service: neutron
        endpoint_interface: internal
        url: "http://{{ management_ip.stdout }}:9696"
        region: RegionOne
        state: present

    - name: create neutron's admin endpoint
      openstack.cloud.endpoint:
        service: neutron
        endpoint_interface: admin
        url: "http://{{ management_ip.stdout }}:9696"
        region: RegionOne
        state: present

- name: deploy configure file to the target host
  block: 

    - name: deploy /etc/neutron/neutron.conf file to target host from template
      ansible.builtin.template:
        src: templates/neutron.conf.j2
        dest: "{{ neutron_conf.neutron_conf_path }}"

    - name: deploy /etc/neutron/plugins/ml2/ml2_conf.ini file to target host from template
      ansible.builtin.template:
        src: templates/ml2_conf.ini.j2
        dest: "{{ neutron_conf.ml2_conf_path }}"

    - name: deploy /etc/neutron/plugins/ml2/linuxbridge_agent.ini file to target host from template
      ansible.builtin.template:
        src: templates/linuxbridge_agent.ini.j2
        dest: "{{ neutron_conf.linuxbridge_conf_path }}"

    - name: deploy /etc/neutron/l3_agent.ini file to target host from template
      ansible.builtin.template:
        src: templates/l3_agent.ini.j2
        dest: "{{ neutron_conf.l3_conf_path }}"

    - name: deploy /etc/neutron/dhcp_agent.ini file to target host from template
      ansible.builtin.template:
        src: templates/dhcp_agent.ini.j2
        dest: "{{ neutron_conf.dhcp_conf_path }}"

    - name: deploy /etc/neutron/metadata_agent.ini file to target host from template
      ansible.builtin.template:
        src: templates/metadata_agent.ini.j2
        dest: "{{ neutron_conf.metadata_conf_path }}"

- name: some special changes to the configure file
  block: 
    - name: add configrue vars to the linuxbridge.ini-1
      community.general.ini_file:
        path: "{{ neutron_conf.linuxbridge_conf_path }}"
        section: linux_bridge
        option: physical_interface_mappings
        value: "provider:{{ bridge_conf.bridge_interface }}"

    - name: add configrue vars to the linuxbridge_agent.ini-2
      community.general.ini_file:
        path: "{{ neutron_conf.linuxbridge_conf_path }}"
        section: vxlan
        option: local_ip
        value: "{{ local_ip }}"

    - name: add configrue vars to the l3_agent.ini
      community.general.ini_file:
        path: "{{ neutron_conf.l3_conf_path }}"
        section: DEFAULT
        option: external_network_bridge
        value: br-ex

- name: configure nova_conf file in target host
  block: 

    - name: set auth_url value in neutron_section
      community.general.ini_file:
        path: "{{ neutron_conf.nova_conf_path }}"
        section: neutron
        option: auth_url 
        value: "http://{{ neutron_conf.neutron_hostname }}:5000"

    - name: set auth_type value in neutron_section
      community.general.ini_file:
        path: "{{ neutron_conf.nova_conf_path }}"
        section: neutron
        option: auth_type
        value: password

    - name: set project_domain_name value in neutron_section
      community.general.ini_file:
        path: "{{ neutron_conf.nova_conf_path }}"
        section: neutron
        option: project_domain_name
        value: Default

    - name: set user_domain_name value in neutron_section
      community.general.ini_file:
        path: "{{ neutron_conf.nova_conf_path }}"
        section: neutron
        option: user_domain_name
        value: Default

    - name: set region_name value in neutron_section
      community.general.ini_file:
        path: "{{ neutron_conf.nova_conf_path }}"
        section: neutron
        option: region_name
        value: RegionOne


    - name: set project_name value in neutron_section
      community.general.ini_file:
        path: "{{ neutron_conf.nova_conf_path }}"
        section: neutron
        option: project_name
        value: service

    - name: set username value in neutron_section
      community.general.ini_file:
        path: "{{ neutron_conf.nova_conf_path }}"
        section: neutron
        option: username
        value: neutron

    - name: set password value in neutron_section
      community.general.ini_file:
        path: "{{ neutron_conf.nova_conf_path }}"
        section: neutron
        option: password
        value: "{{ neutron_conf.neutron_openstack_service_password }}"

    - name: set service_metadata_proxy value in neutron_section
      community.general.ini_file:
        path: "{{ neutron_conf.nova_conf_path }}"
        section: neutron
        option: service_metadata_proxy
        value: true

    - name: set metadata_proxy_shared_secret value in neutron_section
      community.general.ini_file:
        path: "{{ neutron_conf.nova_conf_path }}"
        section: neutron
        option: metadata_proxy_shared_secret
        value: "{{ neutron_conf.METADATA_SECRET}}"

- name: Ensure plugin.ini symlink exists and points to ml2_conf.ini
  ansible.builtin.file:
    src: /etc/neutron/plugins/ml2/ml2_conf.ini
    dest: /etc/neutron/plugin.ini
    state: link
    force: true

- name: Fill neutron database schema
  ansible.builtin.command: >
    su -s /bin/sh -c
    "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head"

- name: Enable and start  Neutron core services at boot
  ansible.builtin.service:
    state: started
    name: "{{ item }}"
    enabled: yes
  loop:
    - neutron-server.service
    - neutron-linuxbridge-agent.service
    - neutron-dhcp-agent.service
    - neutron-metadata-agent.service
    - neutron-l3-agent.service

- name: restart nova-api service
  ansible.builtin.service:
    name: openstack-nova-api.service
    state: restarted
    enabled: yes

